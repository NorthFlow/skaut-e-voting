{"ast":null,"code":"import _objectSpread from \"/Users/apple/Public/Northflow/e-voting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager } from 'react-dynamic-modal';\nimport Axios from \"axios\";\nvar useStyles = makeStyles(styles);\n\nvar openModal = function openModal(voting_id) {\n  // const text = this.refs.input.value;\n  //ModalManager.open(<MyModal text=\"Tralala\" onRequestClose={() => true}/>);\n  console.log(\"ID V MODAL :   \" + voting_id); //q-a-count\n\n  var counts = [[]];\n  Axios.get('http://localhost:4001/questions/q-a-count/' + voting_id).then(function (res) {\n    //console.log(\"in then\");\n    counts = res.data;\n    /*\n    for(var i=0; i< res.data.length; i++){\n      var dataPom = [JSON.stringify(res.data[i].id_question), JSON.stringify(res.data[i].acount)];\n      //console.log(\"riadok> \"+dataPom);\n      tmpArray.push(dataPom);\n    }\n    */\n\n    console.log(\"counts:\"); //counts = tmpArray.filter((e, i) => i !== 0);\n\n    console.log(counts);\n  })[\"catch\"](function (err) {\n    if (err.response) {\n      //TODO: show error response from server\n      window.alert(err.response.data.message);\n      console.log(err.response.data.message);\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        error: err.response.data.message\n      }));\n    } else if (err.request) {\n      //TODO: msg internet connection..\n      window.alert(\"Internet connection failed.\");\n    } else {\n      //TODO: rly dont know what error can happend here but can happend :D\n      window.alert(\"Something went wrong.\");\n    }\n  }); //urobime loop nad datami\n  //let datas = this.state.Votings;\n  // ----- nacitanie otazok k votingom.\n\n  Axios.get('http://localhost:4001/questions/qawording/' + voting_id).then(function (res) {\n    //console.log(\"in then\");\n    var tmpArray = [[]];\n\n    for (var i = 0; i < res.data.length; i++) {\n      var dataPom = [JSON.stringify(res.data[i].question), JSON.stringify(res.data[i].wording), JSON.stringify(res.data[i].id_answer), JSON.stringify(res.data[i].answer)]; //console.log(\"riadok> \"+dataPom);\n\n      tmpArray.push(dataPom);\n    }\n\n    console.log(tmpArray);\n    var datas = tmpArray.filter(function (e, i) {\n      return i !== 0;\n    });\n    ModalManager.open( /*#__PURE__*/React.createElement(MyModal, {\n      params: datas,\n      acount: counts,\n      onRequestClose: function onRequestClose() {\n        return true;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }));\n  })[\"catch\"](function (err) {\n    if (err.response) {\n      //TODO: show error response from server\n      window.alert(err.response.data.message);\n      console.log(err.response.data.message);\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        error: err.response.data.message\n      }));\n    } else if (err.request) {\n      //TODO: msg internet connection..\n      window.alert(\"Internet connection failed.\");\n    } else {\n      //TODO: rly dont know what error can happend here but can happend :D\n      window.alert(\"Something went wrong.\");\n    }\n  });\n};\n\nexport default function CustomTable(props) {\n  var _this2 = this;\n\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor,\n      clickButton = props.clickButton;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, tableHead.map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, tableData.map(function (propup, key) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, propup.map(function (prop, key) {\n      if (prop === \"true\") {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: openModal.bind(_this2, propup[0]),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        }, \"Zahlasuj\"));\n      } else {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }\n        }, prop);\n      }\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","styles","MyModal","ModalManager","Axios","useStyles","openModal","voting_id","console","log","counts","get","then","res","data","err","response","window","alert","message","setState","state","error","request","tmpArray","i","length","dataPom","JSON","stringify","question","wording","id_answer","answer","push","datas","filter","e","open","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","clickButton","tableResponsive","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","propup","tableBodyRow","bind","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager} from 'react-dynamic-modal';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles(styles);\n\nconst openModal = (voting_id) =>{\n  // const text = this.refs.input.value;\n  //ModalManager.open(<MyModal text=\"Tralala\" onRequestClose={() => true}/>);\n\n  console.log(\"ID V MODAL :   \" + voting_id);\n\n  //q-a-count\n  let counts=[[]];\n  Axios.get('http://localhost:4001/questions/q-a-count/' + voting_id)\n    .then(res => {\n      //console.log(\"in then\");\n      counts = res.data;\n      /*\n      for(var i=0; i< res.data.length; i++){\n        var dataPom = [JSON.stringify(res.data[i].id_question), JSON.stringify(res.data[i].acount)];\n        //console.log(\"riadok> \"+dataPom);\n        tmpArray.push(dataPom);\n      }\n      */\n\n      console.log(\"counts:\");\n\n      //counts = tmpArray.filter((e, i) => i !== 0);\n      console.log(counts);\n    })\n    .catch(err => {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        \n        console.log(err.response.data.message);\n        this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n          //TODO: rly dont know what error can happend here but can happend :D\n          window.alert(\"Something went wrong.\");\n    }});\n\n\n  //urobime loop nad datami\n  //let datas = this.state.Votings;\n  // ----- nacitanie otazok k votingom.\n\n\n\n  Axios.get('http://localhost:4001/questions/qawording/' + voting_id)\n    .then(res => {\n      //console.log(\"in then\");\n      let tmpArray = [[]];\n      for(var i=0; i< res.data.length; i++){\n        var dataPom = [JSON.stringify(res.data[i].question), JSON.stringify(res.data[i].wording),JSON.stringify(res.data[i].id_answer), JSON.stringify(res.data[i].answer)];\n        //console.log(\"riadok> \"+dataPom);\n        tmpArray.push(dataPom);\n      }\n      console.log(tmpArray)\n\n      let datas = tmpArray.filter((e, i) => i !== 0);\n      \n      ModalManager.open(<MyModal params={datas} acount={counts} onRequestClose={() => true}/>);\n    })\n    .catch(err => {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        \n        console.log(err.response.data.message);\n        this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n          //TODO: rly dont know what error can happend here but can happend :D\n          window.alert(\"Something went wrong.\");\n    }});\n\n  \n}\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor, clickButton } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((propup, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {propup.map((prop, key) => {\n\n                  if ( prop === \"true\") {\n                    \n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <Button onClick={openModal.bind(this, propup[0])}>Zahlasuj</Button>\n                      </TableCell>\n                    );\n                    \n                  }else {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {prop}\n                      </TableCell>\n                    );\n                  }\n\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}