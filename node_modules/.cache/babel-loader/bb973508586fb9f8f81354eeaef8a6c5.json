{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager } from 'react-dynamic-modal';\nimport Axios from \"axios\";\nvar useStyles = makeStyles(styles);\n\nvar openModal = function openModal(question_id, otvorene) {\n  console.log(\"otvorene\");\n  console.log(otvorene);\n  var hlavicka = [];\n  var QuestionParams = [];\n  var Odpovede = []; // nacitanie hlavicky otazky name - wording\n\n  Axios.get('http://localhost:4001/questions/get-question/' + question_id).then(function (res) {\n    hlavicka = res.data; //console.log(\"== hlavicka\");\n    //console.log(res.data)\n    //ked sme nacitali hlavicku tak ideme dalej\n    // nacitanie parametrov otazky accept_answ - secret\n\n    Axios.get('http://localhost:4001/questions/getQuestionParams/' + question_id).then(function (res) {\n      QuestionParams = res.data;\n      console.log(\"prijimam odpovede?\");\n      console.log(QuestionParams[0].accept_answ);\n      console.log(QuestionParams[0].accept_answ === 0);\n\n      if (QuestionParams[0].accept_answ === 0 && otvorene === '√Åno') {\n        // nacitanie moznych odpovedi ak je mozne odpovedat\n        Axios.get('http://localhost:4001/questions/getAnswers/' + question_id).then(function (res) {\n          Odpovede = res.data;\n          ModalManager.open( /*#__PURE__*/React.createElement(MyModal, {\n            statsData: \"\",\n            otv: otvorene,\n            otazka_id: question_id,\n            hlavicka: hlavicka,\n            odpovede: Odpovede,\n            parametre: QuestionParams,\n            onRequestClose: function onRequestClose() {\n              return true;\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }\n          }));\n        })[\"catch\"](function (err) {\n          if (err.response) {\n            //TODO: show error response from server\n            window.alert(err.response.data.message);\n            console.log(err.response.data.message); //this.setState({...this.state,error: err.response.data.message})\n          } else if (err.request) {\n            //TODO: msg internet connection..\n            window.alert(\"Internet connection failed.\");\n          } else {\n            //TODO: rly dont know what error can happend here but can happend :D\n            window.alert(\"Something went wrong.\");\n          }\n        });\n      } else {\n        if (otvorene === 'Nie') {\n          //nacitame statisticke data!!!\n          Axios.get('http://localhost:4001/questions/get-question-stats/' + question_id).then(function (res) {\n            //Odpovede = res.data;\n            //potrebujeme kus spracovat data. \n            var data = {\n              labels: [],\n              series: []\n            };\n            console.log(\"dlzka res data\");\n            console.log(res.data.length);\n\n            for (var i = 0; i < res.data.lenght; i++) {\n              console(\"IN FOR\");\n              console.log(res.data[i]);\n              data.labels.push(res.data[i].answer);\n              data.series.push(res.data[i].count);\n            }\n\n            console.log(\"idu data!!!\");\n            console.log(data); //ModalManager.open(<MyModal statsData={res.data} otv={otvorene} otazka_id={question_id} hlavicka={hlavicka} odpovede=\"\" parametre=\"\" onRequestClose={() => true}/>);\n          })[\"catch\"](function (err) {\n            if (err.response) {\n              //TODO: show error response from server\n              window.alert(err.response.data.message);\n              console.log(err.response.data.message); //this.setState({...this.state,error: err.response.data.message})\n            } else if (err.request) {\n              //TODO: msg internet connection..\n              window.alert(\"Internet connection failed.\");\n            } else {\n              //TODO: rly dont know what error can happend here but can happend :D\n              window.alert(\"Something went wrong.\");\n            }\n          });\n        }\n      }\n    })[\"catch\"](function (err) {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        console.log(err.response.data.message); //this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n        //TODO: rly dont know what error can happend here but can happend :D\n        window.alert(\"Something went wrong.\");\n      }\n    });\n  })[\"catch\"](function (err) {\n    if (err.response) {\n      //TODO: show error response from server\n      window.alert(err.response.data.message);\n      console.log(err.response.data.message); //this.setState({...this.state,error: err.response.data.message})\n    } else if (err.request) {\n      //TODO: msg internet connection..\n      window.alert(\"Internet connection failed.\");\n    } else {\n      //TODO: rly dont know what error can happend here but can happend :D\n      window.alert(\"Something went wrong.\");\n    }\n  }); //console.log(\"QP \"+QuestionParams.accept_answ)\n  //console.log(QuestionParams.accept_answ === 0)\n};\n\nexport default function CustomTable(props) {\n  var _this2 = this;\n\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    style: {\n      color: \"#019ECE\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, tableHead.map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, tableData.map(function (propup, key) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, propup.name), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: openModal.bind(_this2, propup.id_question, propup.otvorene),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"DETAIL\")));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","styles","MyModal","ModalManager","Axios","useStyles","openModal","question_id","otvorene","console","log","hlavicka","QuestionParams","Odpovede","get","then","res","data","accept_answ","open","err","response","window","alert","message","request","labels","series","length","i","lenght","push","answer","count","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","tableResponsive","table","undefined","color","tableHeadRow","map","prop","key","tableCell","tableHeadCell","propup","tableBodyRow","name","bind","id_question","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager} from 'react-dynamic-modal';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles(styles);\n\n\nconst openModal = (question_id, otvorene) =>{\n   console.log(\"otvorene\");\n   console.log(otvorene);\n  let hlavicka=[];\n  let QuestionParams=[];\n  let Odpovede=[];\n\n  // nacitanie hlavicky otazky name - wording\n  Axios.get('http://localhost:4001/questions/get-question/' + question_id)\n    .then(res => {\n      hlavicka = res.data;\n      //console.log(\"== hlavicka\");\n      //console.log(res.data)\n\n      //ked sme nacitali hlavicku tak ideme dalej\n      // nacitanie parametrov otazky accept_answ - secret\n      Axios.get('http://localhost:4001/questions/getQuestionParams/' + question_id)\n      .then(res => {\n        QuestionParams = res.data;\n        \n        console.log(\"prijimam odpovede?\")\n        console.log(QuestionParams[0].accept_answ)\n        console.log(QuestionParams[0].accept_answ === 0);\n        if(QuestionParams[0].accept_answ === 0 && otvorene==='√Åno'){\n          // nacitanie moznych odpovedi ak je mozne odpovedat\n            Axios.get('http://localhost:4001/questions/getAnswers/' + question_id)\n            .then(res => {\n              Odpovede = res.data;\n          ModalManager.open(<MyModal statsData=\"\" otv={otvorene} otazka_id={question_id} hlavicka={hlavicka} odpovede={Odpovede} parametre={QuestionParams} onRequestClose={() => true}/>);\n        \n            })\n            .catch(err => {\n              if (err.response) {\n                //TODO: show error response from server\n                window.alert(err.response.data.message);\n                \n                console.log(err.response.data.message);\n                //this.setState({...this.state,error: err.response.data.message})\n              } else if (err.request) {\n                //TODO: msg internet connection..\n                window.alert(\"Internet connection failed.\");\n              } else {\n                  //TODO: rly dont know what error can happend here but can happend :D\n                  window.alert(\"Something went wrong.\");\n            }});\n          }else{\n            if(otvorene==='Nie'){\n              //nacitame statisticke data!!!\n              Axios.get('http://localhost:4001/questions/get-question-stats/' + question_id)\n                .then(res => {\n                  //Odpovede = res.data;\n                  //potrebujeme kus spracovat data. \n                  let data={\n                    labels:[],\n                    series:[]\n                  }\n                  console.log(\"dlzka res data\")\n                  console.log(res.data.length)\n                  for(let i=0;i<res.data.lenght;i++){\n                    console(\"IN FOR\")\n                    console.log(res.data[i]);\n                    data.labels.push(res.data[i].answer);\n                    data.series.push(res.data[i].count);\n                  }\n                  console.log(\"idu data!!!\");\n                  console.log(data);\n\n                  //ModalManager.open(<MyModal statsData={res.data} otv={otvorene} otazka_id={question_id} hlavicka={hlavicka} odpovede=\"\" parametre=\"\" onRequestClose={() => true}/>);\n              \n                })\n                .catch(err => {\n                  if (err.response) {\n                    //TODO: show error response from server\n                    window.alert(err.response.data.message);\n                    \n                    console.log(err.response.data.message);\n                    //this.setState({...this.state,error: err.response.data.message})\n                  } else if (err.request) {\n                    //TODO: msg internet connection..\n                    window.alert(\"Internet connection failed.\");\n                  } else {\n                      //TODO: rly dont know what error can happend here but can happend :D\n                      window.alert(\"Something went wrong.\");\n                }});\n            }\n          }\n\n\n      })\n      .catch(err => {\n        if (err.response) {\n          //TODO: show error response from server\n          window.alert(err.response.data.message);\n          \n          console.log(err.response.data.message);\n          //this.setState({...this.state,error: err.response.data.message})\n        } else if (err.request) {\n          //TODO: msg internet connection..\n          window.alert(\"Internet connection failed.\");\n        } else {\n            //TODO: rly dont know what error can happend here but can happend :D\n            window.alert(\"Something went wrong.\");\n      }});\n    })\n    .catch(err => {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        \n        console.log(err.response.data.message);\n        //this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n          //TODO: rly dont know what error can happend here but can happend :D\n          window.alert(\"Something went wrong.\");\n    }});\n\n    //console.log(\"QP \"+QuestionParams.accept_answ)\n    //console.log(QuestionParams.accept_answ === 0)\n    \n\n\n\n    \n}\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]} style={{color: \"#019ECE\"}}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((propup, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                  \n                    <TableCell className={classes.tableCell} >\n                      {propup.name}\n                    </TableCell>\n                  \n\n                <TableCell className={classes.tableCell} >\n                <Button onClick={openModal.bind(this, propup.id_question,propup.otvorene)}>DETAIL</Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}