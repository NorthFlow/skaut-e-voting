{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTable(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor,\n      clickButton = props.clickButton;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, tableHead.map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, tableData.map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, prop.map(function (prop, key) {\n      if (prop === \"true\") {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: clickButton(prop.id_voting),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, \"Zahlasuj\"));\n      } else {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }\n        }, prop);\n      }\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","styles","useStyles","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","clickButton","tableResponsive","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","tableBodyRow","id_voting","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8DAAnB;AAEA,IAAMC,SAAS,GAAGR,UAAU,CAACO,MAAD,CAA5B;AAEA,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AADyC,MAEjCI,SAFiC,GAEuBF,KAFvB,CAEjCE,SAFiC;AAAA,MAEtBC,SAFsB,GAEuBH,KAFvB,CAEtBG,SAFsB;AAAA,MAEXC,gBAFW,GAEuBJ,KAFvB,CAEXI,gBAFW;AAAA,MAEOC,WAFP,GAEuBL,KAFvB,CAEOK,WAFP;AAGzC,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEL,OAAO,CAACM,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,KAAKM,SAAd,gBACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,OAAO,CAACG,gBAAgB,GAAG,aAApB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEH,OAAO,CAACQ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,CAACQ,GAAV,CAAc,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,wBACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEX,OAAO,CAACY,SAAR,GAAoB,GAApB,GAA0BZ,OAAO,CAACa,aAD/C;AAEE,MAAA,GAAG,EAAEF,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGD,IAJH,CADF;AAQD,GATA,CADH,CADF,CADD,GAeG,IAhBN,eAiBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,SAAS,CAACO,GAAV,CAAc,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,SAAS,EAAEX,OAAO,CAACc,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACD,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP,EAAe;AAEvB,UAAKD,IAAI,KAAK,MAAd,EAAsB;AAEpB,4BACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEV,OAAO,CAACY,SAA9B;AAAyC,UAAA,GAAG,EAAED,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAEP,WAAW,CAACM,IAAI,CAACK,SAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAMD,OARD,MAQM;AACJ,4BACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAEf,OAAO,CAACY,SAA9B;AAAyC,UAAA,GAAG,EAAED,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IADH,CADF;AAKD;AAEF,KAlBA,CADH,CADF;AAuBD,GAxBA,CADH,CAjBF,CADF,CADF;AAiDD;AAEDZ,WAAW,CAACkB,YAAZ,GAA2B;AACzBb,EAAAA,gBAAgB,EAAE;AADO,CAA3B;AAIAL,WAAW,CAACmB,SAAZ,GAAwB;AACtBd,EAAAA,gBAAgB,EAAEf,SAAS,CAAC8B,KAAV,CAAgB,CAChC,SADgC,EAEhC,SAFgC,EAGhC,QAHgC,EAIhC,SAJgC,EAKhC,MALgC,EAMhC,MANgC,EAOhC,MAPgC,CAAhB,CADI;AAUtBjB,EAAAA,SAAS,EAAEb,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAACgC,MAA5B,CAVW;AAWtBlB,EAAAA,SAAS,EAAEd,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAAC+B,OAAV,CAAkB/B,SAAS,CAACgC,MAA5B,CAAlB;AAXW,CAAxB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor, clickButton } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n\n                  if ( prop === \"true\") {\n                    \n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <Button onClick={clickButton(prop.id_voting)}>Zahlasuj</Button>\n                      </TableCell>\n                    );\n                    \n                  }else {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {prop}\n                      </TableCell>\n                    );\n                  }\n\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}