{"ast":null,"code":"import _defineProperty from\"/Users/apple/Public/Northflow/e-voting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import classNames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import AppBar from\"@material-ui/core/AppBar\";import Toolbar from\"@material-ui/core/Toolbar\";import IconButton from\"@material-ui/core/IconButton\";import Hidden from\"@material-ui/core/Hidden\";// @material-ui/icons\nimport Menu from\"@material-ui/icons/Menu\";// core components\nimport AdminNavbarLinks from\"./AdminNavbarLinks.js\";import RTLNavbarLinks from\"./RTLNavbarLinks.js\";import Button from\"components/CustomButtons/Button.js\";import styles from\"assets/jss/material-dashboard-react/components/headerStyle.js\";var useStyles=makeStyles(styles);export default function Header(props){var classes=useStyles();function makeBrand(){var name;props.routes.map(function(prop){if(window.location.href.indexOf(prop.layout+prop.path)!==-1){name=prop.name;}return null;});return name;}var color=props.color;var appBarClasses=classNames(_defineProperty({},\" \"+classes[color],color));return/*#__PURE__*/React.createElement(AppBar,{className:classes.appBar+appBarClasses},/*#__PURE__*/React.createElement(Toolbar,{className:classes.container},/*#__PURE__*/React.createElement(\"div\",{className:classes.flex},/*#__PURE__*/React.createElement(Button,{color:\"transparent\",href:\"#\",className:classes.title},makeBrand())),/*#__PURE__*/React.createElement(Hidden,{smDown:true,implementation:\"css\"},props.rtlActive?/*#__PURE__*/React.createElement(RTLNavbarLinks,null):/*#__PURE__*/React.createElement(AdminNavbarLinks,null)),/*#__PURE__*/React.createElement(Hidden,{mdUp:true,implementation:\"css\"},/*#__PURE__*/React.createElement(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",onClick:props.handleDrawerToggle},/*#__PURE__*/React.createElement(Menu,null)))));}","map":{"version":3,"sources":["/Users/apple/Public/Northflow/e-voting/src/components/Navbars/Navbar.js"],"names":["React","classNames","makeStyles","AppBar","Toolbar","IconButton","Hidden","Menu","AdminNavbarLinks","RTLNavbarLinks","Button","styles","useStyles","Header","props","classes","makeBrand","name","routes","map","prop","window","location","href","indexOf","layout","path","color","appBarClasses","appBar","container","flex","title","rtlActive","handleDrawerToggle"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA;AACA,MAAOC,CAAAA,gBAAP,KAA6B,uBAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,+DAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAACS,MAAD,CAA5B,CAEA,cAAe,SAASE,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACpC,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,QAASI,CAAAA,SAAT,EAAqB,CACnB,GAAIC,CAAAA,IAAJ,CACAH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiB,SAAAC,IAAI,CAAI,CACvB,GAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6BJ,IAAI,CAACK,MAAL,CAAcL,IAAI,CAACM,IAAhD,IAA0D,CAAC,CAA/D,CAAkE,CAChET,IAAI,CAAIG,IAAI,CAACH,IAAb,CACD,CACD,MAAO,KAAP,CACD,CALD,EAMA,MAAOA,CAAAA,IAAP,CACD,CAXmC,GAY5BU,CAAAA,KAZ4B,CAYlBb,KAZkB,CAY5Ba,KAZ4B,CAapC,GAAMC,CAAAA,aAAa,CAAG3B,UAAU,oBAC7B,IAAMc,OAAO,CAACY,KAAD,CADgB,CACNA,KADM,EAAhC,CAGA,mBACE,oBAAC,MAAD,EAAQ,SAAS,CAAEZ,OAAO,CAACc,MAAR,CAAiBD,aAApC,eACE,oBAAC,OAAD,EAAS,SAAS,CAAEb,OAAO,CAACe,SAA5B,eACE,2BAAK,SAAS,CAAEf,OAAO,CAACgB,IAAxB,eAEE,oBAAC,MAAD,EAAQ,KAAK,CAAC,aAAd,CAA4B,IAAI,CAAC,GAAjC,CAAqC,SAAS,CAAEhB,OAAO,CAACiB,KAAxD,EACGhB,SAAS,EADZ,CAFF,CADF,cAOE,oBAAC,MAAD,EAAQ,MAAM,KAAd,CAAe,cAAc,CAAC,KAA9B,EACGF,KAAK,CAACmB,SAAN,cAAkB,oBAAC,cAAD,MAAlB,cAAuC,oBAAC,gBAAD,MAD1C,CAPF,cAUE,oBAAC,MAAD,EAAQ,IAAI,KAAZ,CAAa,cAAc,CAAC,KAA5B,eACE,oBAAC,UAAD,EACE,KAAK,CAAC,SADR,CAEE,aAAW,aAFb,CAGE,OAAO,CAAEnB,KAAK,CAACoB,kBAHjB,eAKE,oBAAC,IAAD,MALF,CADF,CAVF,CADF,CADF,CAwBD","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const classes = useStyles();\n  function makeBrand() {\n    var name;\n    props.routes.map(prop => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name =  prop.name;\n      }\n      return null;\n    });\n    return name;\n  }\n  const { color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {makeBrand()}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\n"]},"metadata":{},"sourceType":"module"}