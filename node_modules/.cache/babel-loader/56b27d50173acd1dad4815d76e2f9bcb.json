{"ast":null,"code":"import _objectSpread from \"/Users/apple/Public/Northflow/e-voting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager } from 'react-dynamic-modal';\nimport Axios from \"axios\";\nvar useStyles = makeStyles(styles);\n\nvar openModal = function openModal(voting_id) {\n  console.log(\"ID V MODAL :   \" + voting_id); //q-a-count\n\n  var counts = [[]];\n  Axios.get('http://localhost:4001/questions/q-a-count/' + voting_id).then(function (res) {\n    counts = res.data;\n  })[\"catch\"](function (err) {\n    if (err.response) {\n      //TODO: show error response from server\n      window.alert(err.response.data.message);\n      console.log(err.response.data.message);\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        error: err.response.data.message\n      }));\n    } else if (err.request) {\n      //TODO: msg internet connection..\n      window.alert(\"Internet connection failed.\");\n    } else {\n      //TODO: rly dont know what error can happend here but can happend :D\n      window.alert(\"Something went wrong.\");\n    }\n  }); //urobime loop nad datami\n  //let datas = this.state.Votings;\n  // ----- nacitanie otazok k votingom.\n\n  Axios.get('http://localhost:4001/questions/qawording/' + voting_id).then(function (res) {\n    var datas = [[]];\n    datas = res.data;\n    ModalManager.open( /*#__PURE__*/React.createElement(MyModal, {\n      params: datas,\n      acount: counts,\n      onRequestClose: function onRequestClose() {\n        return true;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }));\n  })[\"catch\"](function (err) {\n    if (err.response) {\n      //TODO: show error response from server\n      window.alert(err.response.data.message);\n      console.log(err.response.data.message);\n\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        error: err.response.data.message\n      }));\n    } else if (err.request) {\n      //TODO: msg internet connection..\n      window.alert(\"Internet connection failed.\");\n    } else {\n      //TODO: rly dont know what error can happend here but can happend :D\n      window.alert(\"Something went wrong.\");\n    }\n  });\n};\n\nexport default function CustomTable(props) {\n  var _this2 = this;\n\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor,\n      clickButton = props.clickButton;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    style: {\n      color: \"#019ECE\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, tableHead.map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, tableData.map(function (propup, key) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, propup.map(function (prop, key) {\n      if (prop === \"true\") {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: openModal.bind(_this2, propup[0]),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, \"Zahlasuj\"));\n      } else {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          className: classes.tableCell,\n          key: key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }\n        }, prop);\n      }\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/apple/Public/Northflow/e-voting/src/components/Table/Table.js"],"names":["React","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Button","styles","MyModal","ModalManager","Axios","useStyles","openModal","voting_id","console","log","counts","get","then","res","data","err","response","window","alert","message","setState","state","error","request","datas","open","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","clickButton","tableResponsive","table","undefined","color","tableHeadRow","map","prop","key","tableCell","tableHeadCell","propup","tableBodyRow","bind","defaultProps","propTypes","oneOf","arrayOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nimport MyModal from \"../Modal/MyModal\";\nimport { ModalManager} from 'react-dynamic-modal';\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles(styles);\n\nconst openModal = (voting_id) =>{\n\n  console.log(\"ID V MODAL :   \" + voting_id);\n\n  //q-a-count\n  let counts=[[]];\n  Axios.get('http://localhost:4001/questions/q-a-count/' + voting_id)\n    .then(res => {\n      counts = res.data;\n    })\n    .catch(err => {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        \n        console.log(err.response.data.message);\n        this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n          //TODO: rly dont know what error can happend here but can happend :D\n          window.alert(\"Something went wrong.\");\n    }});\n\n\n  //urobime loop nad datami\n  //let datas = this.state.Votings;\n  // ----- nacitanie otazok k votingom.\n\n  Axios.get('http://localhost:4001/questions/qawording/' + voting_id)\n    .then(res => {\n      let datas = [[]];\n      datas=res.data;\n      \n      ModalManager.open(<MyModal params={datas} acount={counts} onRequestClose={() => true}/>);\n    })\n    .catch(err => {\n      if (err.response) {\n        //TODO: show error response from server\n        window.alert(err.response.data.message);\n        \n        console.log(err.response.data.message);\n        this.setState({...this.state,error: err.response.data.message})\n      } else if (err.request) {\n        //TODO: msg internet connection..\n        window.alert(\"Internet connection failed.\");\n      } else {\n          //TODO: rly dont know what error can happend here but can happend :D\n          window.alert(\"Something went wrong.\");\n    }});\n\n  \n}\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor, clickButton } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]} style={{color: \"#019ECE\"}}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((propup, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {propup.map((prop, key) => {\n\n                  if ( prop === \"true\") {\n                    \n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        <Button onClick={openModal.bind(this, propup[0])}>Zahlasuj</Button>\n                      </TableCell>\n                    );\n                    \n                  }else {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {prop}\n                      </TableCell>\n                    );\n                  }\n\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}